version: '3.8'

services:
  # Banco de Dados PostgreSQL
  postgres:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: gecom
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Se você tiver scripts SQL para inicialização, mantenha esta linha;
      # caso contrário, ela pode ser removida.
      - ./src/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d gecom"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gecom_network

  # PgAdmin para gerenciar o banco via navegador
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - gecom_network

  # Serviço para inserir os dados de Positions
  migrate_positions:
    build:
      context: .
      dockerfile: backend.Dockerfile
    container_name: gecom_migrate_positions
    restart: "no"
    depends_on:
      postgres:
        condition: service_healthy
    working_dir: /app
    volumes:
      - .:/app
    command: ["node", "--loader", "ts-node/esm", "src/migrations/insertPositions.ts"]
    networks:
      - gecom_network

  # Serviço para inserir os dados de Employees
  migrate_employees:
    build:
      context: .
      dockerfile: backend.Dockerfile
    container_name: gecom_migrate_employees
    restart: "no"
    depends_on:
      postgres:
        condition: service_healthy
    working_dir: /app
    volumes:
      - .:/app
    command: ["node", "--loader", "ts-node/esm", "src/migrations/insertEmployees.ts"]
    networks:
      - gecom_network

  # Backend (Node.js + Express)
  backend:
    build:
      context: .
      dockerfile: backend.Dockerfile
    container_name: gecom_backend
    restart: always
    depends_on:
      migrate_positions:
        condition: service_completed_successfully
      migrate_employees:
        condition: service_completed_successfully
    ports:
      - "5000:5000"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=gecom
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    volumes:
      - .:/app
      - /app/node_modules
    working_dir: /app
    command: ["node", "--loader", "ts-node/esm", "src/server.ts"]
    networks:
      - gecom_network

  # Frontend (React + Vite)
  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    container_name: gecom_frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:5000/api
    volumes:
      - .:/app
      - /app/node_modules
    working_dir: /app
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
    networks:
      - gecom_network

networks:
  gecom_network:

volumes:
  postgres_data:
